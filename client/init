######################################################################
# Copyright (c) 2012, Yahoo! Inc. All rights reserved.
#
# This program is free software. You may copy or redistribute it under
# the same terms as Perl itself. Please see the LICENSE.Artistic file 
# included with this project for the terms of the Artistic License
# under which this project is licensed. 
######################################################################

#!/usr/bin/perl

# /sbin/init replacement
#
use strict;
use warnings 'all';
use lib '/sysbuilder/lib';
use SysBuilder::SerialPort;
use SysBuilder::Console;
use SysBuilder::Proc;
use SysBuilder::Utils qw(wait_for_dev);

if (@ARGV) {

    # someone typed shutdown
    if ( $ARGV[0] == 6 ) {
        system("reboot -f");
    }
    else {
        print "WARNING: Ignoring [@ARGV]\n";
    }
}

setup_system_mountpoints();

my $console = get_console();

my @exec_args
    = ( "/sbin/agetty", "-L", "-l", "/sysbuilder/start", "-n", $console,
    9600 );
exec @exec_args or do {
    print "\n\nFAILED!!!\n";
    system("/bin/bash");
    exit 0;
};

sub get_console {
    my $serial  = SysBuilder::SerialPort->new;
    my $console = SysBuilder::Console->new;
    my $console  = $console->live_console;
    my $serial   = $serial->live_serial;

    my $proc = SysBuilder::Proc->new;
    return $console if $proc->nodetect;

    if ( !$console->is_serial ) {
        print "\nCONSOLE: not using a serial port as a console\n\n";
    }
    elsif ( defined $serial ) {
        my $serial_dev = "ttyS$serial";
        if ( $console ne $serial_dev ) {

            # Use this serial device
            my $cfg = { "console_serial_port" => $serial };
            mkdir "/sysbuilder/etc";    # ignore failure
            YAML::DumpFile( "/sysbuilder/etc/overrides.yaml", $cfg );
            $console = $serial_dev;
        }
    }

    # wait for console to appear
    wait_for_dev( $console );

    return $console;
}

sub setup_system_mountpoints {
    system("echo /dev/root / ext2 rw 0 0 > /etc/mtab");

    mkdir "/dev"  if !-d "/dev";
    mkdir "/proc" if !-d "/proc";
    mkdir "/sys"  if !-d "/sys";

    system("mount -t proc proc /proc");
    system("mount -t sysfs sys /sys");

    if( -f "/dev/null" ) {
        # /dev already exists on this image
        # just create /dev/pts

        mkdir "/dev/pts" if !-d "/dev/pts";
        system("mount -t devpts devpts /dev/pts");
    } else {
        # build up /dev on a tmpfs
        system("mount -t tmpfs tmpfs /dev");

        mkdir "/dev/pts";
        system("mount -t devpts devpts /dev/pts");

        system("mknod -m 0666 /dev/null c 1 3");
        system("mknod -m 0666 /dev/ptmx c 5 2");
        system("mknod -m 0600 /dev/console c 5 1");
        system("mknod -m 0660 /dev/kmsg c 1 11");
        system("mknod -m 0666 /dev/zero c 1 5");
        system("mknod -m 0600 /dev/ttyS0 c 4 64");
        system("mknod -m 0600 /dev/ttyS1 c 4 65");
        system("mknod -m 0600 /dev/ttyS2 c 4 66");
        system("mknod -m 0600 /dev/ttyS3 c 4 67");
        system("mknod -m 0600 /dev/ttyS4 c 4 68");
        system("mknod -m 0600 /dev/ttyS5 c 4 69");
        system("mknod -m 0600 /dev/ttyS6 c 4 70");

        if( -d "/etc/dev.static" ) {
            # static /dev
            for( glob "/etc/dev.static/*" ) {
                system( "cp -a $_ /dev/" );
            }
        }
    }
}
